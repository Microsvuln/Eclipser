--- qemu-2.3.0/linux-user/elfload.c.orig	2017-04-20 20:24:02.721934292 +0900
+++ qemu-2.3.0/linux-user/elfload.c	2017-04-20 21:49:35.202993175 +0900
@@ -28,6 +28,8 @@
 
 #define ELF_OSABI   ELFOSABI_SYSV
 
+extern abi_ulong chatkey_entry_point;
+
 /* from personality.h */
 
 /*
@@ -1339,7 +1341,7 @@
                                   abi_ulong p)
 {
     char *tmp, *tmp1, *pag = NULL;
-    int len, offset = 0;
+    int padding, len, offset = 0;
 
     if (!p) {
         return 0;       /* bullet-proofing */
@@ -1352,10 +1354,22 @@
         }
         tmp1 = tmp;
         while (*tmp++);
-        len = tmp - tmp1;
+        len = tmp - tmp1; /* Here, len includes '\0' character */
+
         if (p < len) {  /* this shouldn't happen - 128kB */
             return 0;
         }
+
+        /* For Chatkey's node coverage instrumentation. Function strcmp_sse() is
+         * sensitive to the alignment of input string, and it will execute
+         * different code block when input string alignment gets different. To
+         * avoid such unwanted side effect on node coverage, we force the
+         * argv[i] and env[i] strings to be aligned in multiple of 0x40.
+         */
+        padding = ((p-len) & 0x3f);
+        p -= padding;
+				offset -= padding;
+
         while (len) {
             --p; --tmp; --len;
             if (--offset < 0) {
@@ -1889,6 +1903,8 @@
     info->brk = 0;
     info->elf_flags = ehdr->e_flags;
 
+    if (!chatkey_entry_point) chatkey_entry_point = info->entry;
+
     for (i = 0; i < ehdr->e_phnum; i++) {
         struct elf_phdr *eppnt = phdr + i;
         if (eppnt->p_type == PT_LOAD) {
